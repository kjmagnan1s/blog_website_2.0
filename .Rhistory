grades = read.csv("Grades.csv")
Grades <- read.csv("C:/Users/kjmag/Google Drive/Documents/UCHICAGO/DataScience/R/Week1/Grades.csv", header=FALSE)
View(Grades)
mean(grades#HW_F2015, na.rm = TRUE)
setwd("c:\users\kjmag\desktop")
grades = read.csv("Grades.csv")
View(Grades)
mean(grades$HW_F2015, na.rm = TRUE
mean(grades$HW_F2015, na.rm = TRUE
setwd("c:\users\kjmag\desktop")
grades = read.csv("Grades.csv")
mean(grades$HW_F2015, na.rm = TRUE
View(Grades)
getwd()
setwd("C:/Users/kjmag/Google Drive/Documents/UCHICAGO/DataScience/R")
library(haven)
Gino1 <- read_sav("C:/Users/kjmag/Google Drive/Documents/UCHICAGO/DataScience/R/Week3/Gino1.sav")
View(Gino1)
Gino = Gino1
summary(Gino)
install.packages("Hmisc")
intall.packages("Car")
install.packages("Car")
install.packages("car")
library(Hmisc)
library(car)
library(heplots)
install.packages("heplots")
library(heplots)
IA = Gino1
IAnew = IA[which(IA$failed_essay == '0'),]
IAnew = IA[which(IA$failed_essay == '0'), ]
IAnew$authenticity = factor(IAnew$authenticity)
IAnew$general_type = factor(IAnew$general_type)
fit = aov(alientation ~ authenticity*general_type, data = IAnew)
fit
fit = aov(alientation ~ authenticity*general_type, data = IAnew)
fit
fit = aov(alienation ~ authenticity*general_type, data = IAnew)
fit
fit = aov(alienation ~ authenticity*general_type, data = IAnew)
fit
mod = lm(alienation ~ authenticity*general_type, data = IAnew,
contrasts = list(authenticity=contr.sum, general.type=contr.sum))
fit = Anova(mod, type=3)
fit = aov(alienation ~ authenticity*general.type, data = IAnew)
fit
#contr.sum telling r to constrain all contrasts to sum to 0.  compare mean of each level to mean across levels
mod = lm(alienation ~ authenticity*general.type, data = IAnew,
contrasts = list(authenticity=contr.sum, general.type=contr.sum))
fit = Anova(mod, type=3)
fit
mod = lm(alienation ~ authenticity*general.type, data = IAnew,
contrasts = list(authenticity=contr.sum, general.type=contr.sum))
fit = Anova(mod, type = 3)
fit
source('C:/Users/kjmag/Google Drive/Documents/UCHICAGO/DataScience/R/Week3/Gino script.R', echo=TRUE)
install.packages("Hmisc")
install.packages("car")
install.packages("heplots")
install.packages("heplots")
#remove two subjects who failed the essay and weren't included.  Excludes any participants who do not have
#a 0 in failed essay
IAnew = IA[which(IA$failed_essay == '0'), ]
#telling R to treat the two variables as factors (A, B) for the anova test because they are coded as 1 and 0
IAnew$authenticity = factor(IAnew$authenticity)
IAnew$general.type = factor(IAnew$general.type)
#aov = ANOVA.  alientation is DV, authenticity and general type are IVs
#aov(DV ~ factorA*factorB*etc) * is because its a 2x2 factor
#R runs a type I SS aov by default
fit = aov(alienation ~ authenticity*general.type, data = IAnew)
fit
#contr.sum telling r to constrain all contrasts to sum to 0.  compare mean of each level to mean across levels
#using car package to run type III
mod = lm(alienation ~ authenticity*general.type, data = IAnew,
contrasts = list(authenticity=contr.sum, general.type=contr.sum))
fit = Anova(mod, type = 3)
fit
IA = Gino1
IAnew = IA[which(IA$failed_essay == '0'), ]
IAnew$authenticity = factor(IAnew$authenticity)
IAnew$general.type = factor(IAnew$general.type)
fit = aov(alienation ~ authenticity*general.type, data = IAnew)
fit = aov(alienation ~ authenticity*general.type, data = IAnew)
fit
#contr.sum telling r to constrain all contrasts to sum to 0.  compare mean of each level to mean across levels
#using car package to run type III
mod = lm(alienation ~ authenticity*general.type, data = IAnew,
contrasts = list(authenticity=contr.sum, general.type=contr.sum))
fit = Anova(mod, type = 3)
fit
IAnew$general.type = factor(IAnew$general.type)
IAnew$general_type = factor(IAnew$general_type)
IAnew$authenticity = factor(IAnew$authenticity)
IAnew$general_type = factor(IAnew$general_type)
#aov = ANOVA.  alientation is DV, authenticity and general type are IVs
#aov(DV ~ factorA*factorB*etc) * is because its a 2x2 factor
#R runs a type I SS aov by default
fit = aov(alienation ~ authenticity*general_type, data = IAnew)
fit
#contr.sum telling r to constrain all contrasts to sum to 0.  compare mean of each level to mean across levels
#using car package to run type III
mod = lm(alienation ~ authenticity*general_type, data = IAnew,
contrasts = list(authenticity=contr.sum, general_type=contr.sum))
fit = Anova(mod, type = 3)
fit
help("list")
etasq(mod)
options(contrast = c("contr.sum", "contr.poly"))
fit0 = aov(alienation ~ authenticity*general_type, data = IAnew)
drop1(fit0,~., test = "F")
options(contrast = c("contr.sum", "contr.poly"))
fit0 = aov(alienation ~ authenticity*general_type, data = IAnew)
drop1(fit0, ~., test = "F")
options(contrasts = c("contr.sum", "contr.poly"))
fit0 = aov(alienation ~ authenticity*general_type, data = IAnew)
drop1(fit0, ~., test = "F")
etasq(drop1)
etasq(fit0)
t.test(IA$alienation[IA$authenticity == 1], conf.int = TRUE)
t.test(IAnew$alienation[IAnew$authenticity == 1], conf.int = TRUE)
t.test(IAnew$alienation[IAnew$authenticity == 0], conf.int = TRUE)
fit3
fit3 = Anova(lm(impurity ~ authenticity*general_type, data = IAnew,
contrasts = list(authenticity=contr.sum, general_type=contr.sum)),
type = 3)
fit3
names(IAnew)
fit4 = Anova(lm(moral_self_regard ~ authenticity*general_type, data = IAnew,
contrasts = list(authenticity=contr.sum, general_type=contr.sum)),
type = 3)
fit4
etasq(fit3)
mod4 = (lm(moral_self_regard ~ authenticity*general_type, data = IAnew,
contrasts = list(authenticity=contr.sum, general_type=contr.sum)))
fit4 = Anova(mod4, type = 3)
fit4
etasq(mod4)
etasq(mod4)
help(sphericity)
install.packages(afex)
install.packages(tidyverse)
install.packages("tidyverse")
install.packages("afex")
source('~/.active-rstudio-document', echo=TRUE)
setwd("C:/users/kjmag/GoogleDrive/Documents/UCHICAGO/DataScience/R/Week4")
getwd()
setwd("C:\Users\kjmag\Google Drive\Documents\UCHICAGO\DataScience\R")
library(haven)
DL <- read_sav("C:/Users/kjmag/Google Drive/Documents/UCHICAGO/DataScience/R/Week4/DL.sav")
View(DL)
accent = DL
View(DL)
View(accent)
accent$age_group = factor(accent$age_group)
print(age_group)
accent$age_group = 1
View(DL)
DL1 = DL[which(DL$age_group == "1"),]
View(DL)
View(DL1)
print(DL$age_group)
print(DL)
print(DL$location)
View(DL1)
length(DL1$subject)
length(unique(DL1$subject))
DL1$subject = factor(1:nrow(DL1))
DL1 = DL1[,!(names(DL1) %n% c('geo_s', 'charge_s', 'nice_s', 'friends_s', 'us_s', 'smart_s'))]
DL1 = DL1[,!(names(DL1)%n% c('geo_s', 'charge_s', 'nice_s', 'friends_s', 'us_s', 'smart_s'))]
DL1 = DL1[,!(names(DL1) %n% c('geo_s', 'charge_s', 'nice_s', 'friends_s', 'us_s', 'smart_s'))]
DL1 = DL1[,!(names(DL1) %in% c('geo_s', 'charge_s', 'nice_s', 'friends_s', 'us_s', 'smart_s'))]
SLblock = melt(DL1, id = c('subject', 'location', 'condition', 'age_group',
'friends_n', 'geo_n', 'us_n', 'experimenter', 'age',
'gender', 'experiment', 'sl_n', 'geotype_n'))
View(SLblock)
names(SLblock)[14] = 'SLe'
names(SLblock)[15] = 'Response'
levels(SLblock$SLe)[levels(SLblock$SLe)%in%c("nice_n")] = "nice"
levels(SLblock$SLe)[levels(SLblock$SLe)%in%c("smart_n")] = "smart"
levels(SLblock$SLe)[levels(SLblock$SLe)%in%c("charge)_n")] = "incharge"
aSLe = aov_ez("subject", "Response", SLblock,
between = c("location"),
within = c("SLe"),
anova_table = list(correction = "none", es = "pes"))
print(aSLe)
View(DL1)
Geo = melt(DL1, id = c('subject', 'location', 'condition', 'age_group',
'friends_n', 'nice_n', 'smart_n', 'charge_n', 'experimenter', 'age',
'gender', 'experiment', 'sl_n', 'geotype_n'))
View(Geo)
names(Geo)[15] = 'Geography'
names(Geo)[16] = 'Response2'
levels(Geo$Geography)[levels(Geo$Geography)%in%c("geo_n")] = "North"
levels(Geo$Geography)[levels(Geo$Geography)%in%c("us_n")] = "American"
aGeo = aov_ez("subject", "Response", Geo,
between = c("location"),
within = c("Geography"),
anova_table = list(es = "pes"))
print(Geo)
aGeo = aov_ez("subject", "Response", Geo,
between = c("location"),
within = c("Geography"),
anova_table = list(es = "pes"))
print(aGeo)
names(Geo)[15] = 'Geography'
names(Geo)[16] = 'Response2'
levels(Geo$Geography)[levels(Geo$Geography)%in%c("geo_n")] = "North"
levels(Geo$Geography)[levels(Geo$Geography)%in%c("us_n")] = "American"
aGeo = aov_ez("subject", "Response", Geo,
between = c("location"),
within = c("Geography"),
anova_table = list(es = "pes"))
print(aGeo)
aGeo = aov_ez("subject", "Response", Geo,
between = c("location"),
within = c("Geography"),
anova_table = list(es = "pes"))
aGeo = aov_ez("subject", "Response2", Geo,
between = c("location"),
within = c("Geography"),
anova_table = list(es = "pes"))
print(aGeo)
aGeo = aov_ez("subject", "Response2", Geo,
between = c("location"),
within = c("Geography"),
anova_table = list(correction = "none", es = "pes"))
print(aGeo)
View(DL1)
View(DL)
help(log)
log(-1.23+1.59)
get(wd)
get(wd)
get(wd)
install.packages('spdep')
install.packages(gstat)
install.packages('gstat')
install.packages('spatstat')
install.packages('devtools')
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec()
IRkernel::installspec()
rmarkdown::render_site()
setwd("C:\Users\kjmag\Documents\GitHub\kjmagnan1s.github.io")
setwd("C:/Users/kjmag/Documents/GitHub/kjmagnan1s.github.io")
rmarkdown::render_site()
install.packages("rmarkdown")
install.packages("rmarkdown")
rmarkdown::render_site()
getwd()
setwd("C:\Users\kjmag\Documents\GitHub\kjmagnan1s.github.io")
setwd("C:/Users/kjmag/Documents/Git/kjmagnan1s")
setwd("C:/Users/kjmag/Documents/git/kjmagnan1s")
setwd("~/Git/kjmagnan1s.github.io")
rmarkdown::render_site()
640*.75
480*.75
library("rmarkdown", lib.loc="~/R/win-library/3.3")
detach("package:rmarkdown", unload=TRUE)
library(knitr)
install.packages("rmarkdown")
devtools::install_url("http://cran.r-project.org/src/contrib/rmarkdown0.5.1.tar.gz")
getOptions("repos")
install.packages("rmarkdown", repos = "https://cran.revolutionanalytics.com")
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
getwd()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
library(ggplot2)
library(readxl)
library(dplyr)
library(reshape2)
sworn_officers <- read_excel("Full_time_leo_by_state_by_city.xls")
rmarkdown::render_site()
knitr::include_graphics(images\bar_plot.jpeg)
knitr::include_graphics("images\bar_plot.jpeg")
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
